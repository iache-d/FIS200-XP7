import numpy as np

def calcular_b_y_error(B, B_delta, m, m_delta):
    # Calcular el valor de b a partir de la fórmula b = 2m / B
    b = (2 * m) / B
    
    # Calcular el error en b usando la propagación de errores
    b_delta = b * np.sqrt((B_delta / B)**2 + (m_delta / m)**2)
    
    return b, b_delta

# Ejemplo de uso:
B = float(input("Ingresa el valor de B: "))
B_delta = float(input("Ingresa el error de B: "))
m = float(input("Ingresa el valor de m: "))
m_delta = float(input("Ingresa el error de m: "))

# Llamar a la función para obtener b y b_delta
b, b_delta = calcular_b_y_error(B, B_delta, m, m_delta)

# Mostrar los resultados
print(f"El valor calculado de b es: {b:.6f} ± {b_delta:.6f}")
